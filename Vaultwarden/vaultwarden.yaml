apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudflare-config
  namespace: ns-management
data:
  config.yaml: |
    tunnel: bae9622d-6a85-4dac-b165-d47d752f92da
    credentials-file: /etc/cloudflared/bae9622d-6a85-4dac-b165-d47d752f92da.json
    ingress:
      - hostname: vaultwarden.bloedlinks.app
        service: http://vaultwarden.ns-management.svc.cluster.local:80
      - service: http_status:404

    originRequest:
      noTLSVerify: true
    logLevel: info
    warp-routing:
      enabled: true
    dns:
      - address: 10.96.0.10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudflared
  namespace: ns-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudflared
  template:
    metadata:
      labels:
        app: cloudflared
    spec:
      dnsPolicy: ClusterFirst
      containers:
      - name: cloudflared
        image: cloudflare/cloudflared:latest
        args: ["tunnel", "--config", "/etc/cloudflared/config.yaml", "run"]
        env:
        - name: TUNNEL_TOKEN
          value: "eyJhIjoiMWIwZGEyNzdiY2YzN2QxYjUxMjViMTFhOTBkYTNkMzEiLCJzIjoiTXpnd05HWmlOREF0TVRnNVpDMDBNbU14TFRnNU1XUXRaalE1Wm1FeVpUQTBZalZrIiwidCI6ImJhZTk2MjJkLTZhODUtNGRhYy1iMTY1LWQ0N2Q3NTJmOTJkYSJ9"
        volumeMounts:
        - name: config
          mountPath: /etc/cloudflared
      volumes:
      - name: config
        configMap:
          name: cloudflare-config
master@PROD-VM-Masternode-01:~/niels-manifests$ cat vaultwarden.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: ns-management
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vaultwarden-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    path: /mnt/Main/Apps/Vaultwarden
    server: 172.24.1.99
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vaultwarden-pvc
  namespace: ns-management
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: vaultwarden-pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden-postgres
  namespace: ns-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden-postgres
  template:
    metadata:
      labels:
        app: vaultwarden-postgres
    spec:
      containers:
      - name: postgres
        image: postgres:13
        env:
        - name: POSTGRES_DB
          value: vaultwarden
        - name: POSTGRES_USER
          value: vaultwarden
        - name: POSTGRES_PASSWORD
          value: strongpassword
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden-postgres
  namespace: ns-management
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: vaultwarden-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vaultwarden
  namespace: ns-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vaultwarden
  template:
    metadata:
      labels:
        app: vaultwarden
    spec:
      containers:
      - name: vaultwarden
        image: vaultwarden/server:latest
        env:
        - name: DATABASE_URL
          value: "postgresql://vaultwarden:strongpassword@vaultwarden-postgres:5432/vaultwarden"
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /data
          name: vaultwarden-data
      volumes:
      - name: vaultwarden-data
        persistentVolumeClaim:
          claimName: vaultwarden-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: ns-management
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: vaultwarden
